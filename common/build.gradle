import net.fabricmc.loom.task.RemapJarTask

plugins {
    id 'idea'
    id 'java'
    id 'fabric-loom' version "${loom_version}"
}

loom {
    if (project(":common").file("src/main/resources/${mod_id}.accesswidener").exists()) {
        accessWidenerPath.set(project(":common").file("src/main/resources/${mod_id}.accesswidener"))
    }
}

dependencies {

    minecraft "com.mojang:minecraft:${minecraft_version}"

    mappings loom.layered() {
        officialMojangMappings()
        parchment("org.parchmentmc.data:parchment-${minecraft_version}:${parchment_version}@zip")
    }

    compileOnly group:'org.spongepowered', name:'mixin', version:'0.8.5'
    implementation group: 'com.google.code.findbugs', name: 'jsr305', version: '3.0.2'

    modImplementation "net.tslat.smartbrainlib:SmartBrainLib-common-${minecraft_version}:${sbl_version}"
    modImplementation "net.tslat.effectslib:TslatEffectsLib-common-${minecraft_version}:${tslateffectslib_version}"

    modCompileOnly "dev.kosmx.player-anim:player-animation-lib:${playeranimator_version}"
    modCompileOnly "dev.kosmx.player-anim:anim-core:${playeranimator_version}"
    modCompileOnly "software.bernie.geckolib:geckolib-fabric-${minecraft_version}:${geckolib_version}"
}

import net.fabricmc.loom.task.AbstractRemapJarTask
tasks.withType(AbstractRemapJarTask).each {
    it.targetNamespace = "named"
}

sourceSets.main.resources.srcDir './src/generated/resources'

/*
Generates a new common artifact in intermediary mappings.
*/

remapJar {
    targetNamespace.set("named")
    dependsOn("remapCommonJar")
}

tasks.register("remapCommonJar", RemapJarTask,  task -> {
    final AbstractArchiveTask jarTask = getTasks().named(JavaPlugin.JAR_TASK_NAME, AbstractArchiveTask.class).get();
    task.dependsOn(jarTask);
    task.setDescription("Remaps the built project jar to intermediary mappings.");

    task.getInputFile().convention(jarTask.getArchiveFile());
    task.dependsOn(getTasks().named(JavaPlugin.JAR_TASK_NAME));
    task.archiveFileName.set(archiveFileName.get().replace(".jar", "-intermediary.jar"))
    task.targetNamespace.set("intermediary")
    task.setGroup("fabric")
})